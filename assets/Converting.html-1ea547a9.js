import{_ as e,p as l,q as a,a1 as n}from"./framework-cbc93935.js";const o={},s=n(`<h1 id="color-converting" tabindex="-1"><a class="header-anchor" href="#color-converting" aria-hidden="true">#</a> Color converting</h1><p>After the <strong>color instance</strong> is created, the corresponding color space value can be obtained by the following methods of the color instance, so that the color space conversion can be easily carried out.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Methods include: <code>rgb()</code> <code>cmyk()</code> <code>hsl()</code> <code>hsv()</code> <code>hsi()</code> <code>hwb()</code> <code>xyz()</code> <code>lab()</code> <code>lch()</code> <code>xyY()</code> The method has a parameter <code>round</code>, its type is <code>Boolean | number</code><br>The default value is <code>true</code></p><ul><li>When <code>true</code>, the number of decimal places is left as default.</li><li>When <code>false</code>, all calculated decimal places are returned.</li><li>When <code>number</code>, specifies how many decimal places to reserve.</li></ul></div><p><strong>Exampleï¼š</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// hsl to rgb</span>
<span class="token keyword">const</span> color <span class="token operator">=</span> colorsea<span class="token punctuation">.</span><span class="token function">hsl</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
color<span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// [255, 0, 0]</span>
<span class="token comment">// to lab</span>
color<span class="token punctuation">.</span><span class="token function">lab</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// [53.24, 80.09, 67.2]</span>
<span class="token comment">// Do not deal with decimals</span>
color<span class="token punctuation">.</span><span class="token function">lab</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// [ 53.24079414130722, 80.09245959641109, 67.20319651585301 ]</span>

<span class="token comment">// The other color space methods are similar...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="color-rgb" tabindex="-1"><a class="header-anchor" href="#color-rgb" aria-hidden="true">#</a> color.rgb()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[r, g, b]</code></p></li></ul><h2 id="color-rgba" tabindex="-1"><a class="header-anchor" href="#color-rgba" aria-hidden="true">#</a> color.rgba()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[r, g, b, alpha]</code></p></li></ul><h2 id="color-cmyk" tabindex="-1"><a class="header-anchor" href="#color-cmyk" aria-hidden="true">#</a> color.cmyk()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[c, m, y, k]</code></p></li></ul><h2 id="color-hsl" tabindex="-1"><a class="header-anchor" href="#color-hsl" aria-hidden="true">#</a> color.hsl()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[h, s, l]</code></p></li></ul><h2 id="color-hsla" tabindex="-1"><a class="header-anchor" href="#color-hsla" aria-hidden="true">#</a> color.hsla()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[h, s, l, alpha]</code></p></li></ul><h2 id="color-hsv" tabindex="-1"><a class="header-anchor" href="#color-hsv" aria-hidden="true">#</a> color.hsv()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[h, s, v]</code></p></li></ul><h2 id="color-hsi" tabindex="-1"><a class="header-anchor" href="#color-hsi" aria-hidden="true">#</a> color.hsi()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[h, s, i]</code></p></li></ul><h2 id="color-hwb" tabindex="-1"><a class="header-anchor" href="#color-hwb" aria-hidden="true">#</a> color.hwb()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (default value) Returns an integer without reserving a decimal</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[h, w, b]</code></p></li></ul><h2 id="color-xyz" tabindex="-1"><a class="header-anchor" href="#color-xyz" aria-hidden="true">#</a> color.xyz()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (Default value) Number of decimal places to keep: 2</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[x, y, z]</code></p></li></ul><h2 id="color-lab" tabindex="-1"><a class="header-anchor" href="#color-lab" aria-hidden="true">#</a> color.lab()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (Default value) Number of decimal places to keep: 2</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[l, a, b]</code></p></li></ul><h2 id="color-lch" tabindex="-1"><a class="header-anchor" href="#color-lch" aria-hidden="true">#</a> color.lch()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (Default value) Number of decimal places to keep: 2</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[l, c, h]</code></p></li></ul><h2 id="color-xyy" tabindex="-1"><a class="header-anchor" href="#color-xyy" aria-hidden="true">#</a> color.xyY()</h2><ul><li><p><strong>@param</strong> round: boolean | number</p></li><li><p>false: returns all decimal places without decimal processing</p></li><li><p>true: (Default value) Number of decimal places to keep: 2</p></li><li><p>number: specifies the number of decimal places</p></li><li><p><strong>@return</strong> <code>[x, y, Y]</code></p></li></ul><h2 id="color-hex" tabindex="-1"><a class="header-anchor" href="#color-hex" aria-hidden="true">#</a> color.hex()</h2><ul><li><p><strong>@param</strong> alphaFlag: 0 | 1 | 2</p><ul><li>0: do not display alpha value,</li><li>1: display alpha value,</li><li>2: (default value) only show alpha when alpha is not equal to 100%</li></ul></li><li><p><strong>@return</strong> Returns an RGB hex string</p></li></ul>`,31),r=[s];function i(c,t){return l(),a("div",null,r)}const u=e(o,[["render",i],["__file","Converting.html.vue"]]);export{u as default};
