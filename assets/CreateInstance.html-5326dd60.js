import{_ as i,M as p,p as r,q as u,Q as s,t as n,N as a,U as t,a1 as e}from"./framework-cbc93935.js";const d={},m=e('<h1 id="create-a-color-instance-object" tabindex="-1"><a class="header-anchor" href="#create-a-color-instance-object" aria-hidden="true">#</a> Create a Color instance object</h1><h2 id="colorsea" tabindex="-1"><a class="header-anchor" href="#colorsea" aria-hidden="true">#</a> colorsea()</h2><p>Create a color instance object using the <code>colorsea(rgb, alpha, config)</code> function.</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3>',4),b=s("p",null,[s("strong",null,"colorInput"),n(": string | [number, number, number]")],-1),k=s("li",null,[n("Color data input ("),s("em",null,"Required"),n(")")],-1),h=s("li",null,[n("1 hex string such as "),s("code",null,"'#ffffff'"),n("，")],-1),v=s("code",null,"'rgb(255, 255, 255)'",-1),g=s("code",null,"'hsl(0, 20%, 50%)'",-1),f=s("strong",null,"v1.2.0",-1),y=s("a",{href:"#spaceFunctionSample"},"【简单示例-示例二】",-1),_=s("li",null,"When the type is a [number, number, number] tuple, it is a rgb value: [r, b, b]",-1),x=e("<li><p><strong>alpha</strong>: number | undefined</p><ul><li>alpha channel (opacity), accepts only values in range <code>[0, 100]</code>, (<em>Optional</em>)</li><li>When the parameter is <code>undefined</code>, if the <code>colorInput</code> parameter with an <code>alpha</code> value set, then the <code>alpha</code> value is set by <code>colorInput</code>, otherwise the default value is <code>100</code></li></ul></li>",1),w=s("strong",null,"config",-1),C=e(`<ul><li>Settings (<em>Optional</em>)</li><li>Note that this parameter is included after <strong>v1.2.0</strong></li></ul><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Config</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  throwParseError<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">//  Whether to throw an error if parsing the color incorrectly. The default value is false. When false, enter the wrong color value and the default output is black.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),E=e(`<h3 id="simple-example" tabindex="-1"><a class="header-anchor" href="#simple-example" aria-hidden="true">#</a> Simple Example</h3><p><strong>Example 1</strong>: Basic usage</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>
<span class="token comment">// You can pass in a HEX string</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#cc0020&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>
<span class="token comment">// or [R, G, B]</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">204</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>
<span class="token comment">// Also equal to</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;rgb(204, 0, 32)&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span>
<span class="token comment">// or</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;rgba(204, 0, 32, 90%)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div id="spaceFunctionSample"></div>`,4),T=e(`<p><strong>Example 2</strong>: Uses the color space function string</p><p>The colorInput parameter can be entered as a string with the following color space values:</p><p><strong>rgb</strong>, <strong>rgba</strong>, <strong>cmyk</strong>, <strong>lab</strong>, <strong>hsl</strong>, <strong>hsla</strong>, <strong>hsv</strong>, <strong>hsva</strong>, <strong>lch</strong>, <strong>hwb</strong>, <strong>hwba</strong>, <strong>xyz</strong>,</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hsl(150, 80%, 60%)&#39;</span><span class="token punctuation">)</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hsl(150, 80, 60)&#39;</span><span class="token punctuation">)</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hsl(150, 0.8, 0.6)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),z=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hsla(150, 80%, 60%, 20%)&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// If the inputColor parameter has an alpha value and the alpha parameter is set separately, the value of the alpha parameter is preferred</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hsla(150, 80%, 60%, 20%)&#39;</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),I=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;cmyk(40, 80, 60, 20)&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),B=e(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;hwb(180, 50%, 10%)&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// The other color space methods are similar and are not all shown here</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q=e('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If it contains parameters in the form of percentage, they can be expressed in the following types:</p><ul><li>Use percentage signs directly, such as:<code>colorsea(&#39;rgba(204, 0, 32, 90%)&#39;)</code></li><li>Can not write percent sign, input <strong>90</strong> equivalent to 90%：<code>colorsea(&#39;rgba(204, 0, 32, 90)&#39;)</code></li><li>Using decimals less than 1, enter <strong>0.9</strong> equivalent to 90%: <code>colorsea(&#39;rgba(204, 0, 32, 0.9)&#39;)</code> The above three input colors are <strong>equal</strong>.</li></ul><p><strong>What should be noted is:</strong></p><p>If you want to input <code>0.1%</code> can not directly input <code>0.1</code>, because input less than the number of <code>1</code>, will be automatically multiplied by <code>100</code>, input <code>0.1</code> is <code>10%</code>.</p><p>So, you can just type &#39;0.1%&#39;, or &#39;0.001&#39; to represent &#39;0.1%&#39;</p><p><strong>This conversion only works if the colorInput argument is entered as a string. Unless otherwise noted, most percentages of colorsea are represented by numbers in the [0, 100] range from 0% to 100%</strong></p></div><hr><h3 id="use-color-names" tabindex="-1"><a class="header-anchor" href="#use-color-names" aria-hidden="true">#</a> Use color names</h3>',3),N=s("code",null,"colorsea()",-1),R=s("strong",null,"X11 color names",-1),U=s("strong",null,"Chinese traditional colors",-1),W=s("strong",null,"Japanese Traditional Colors",-1),j=e(`<hr><h3 id="other" tabindex="-1"><a class="header-anchor" href="#other" aria-hidden="true">#</a> Other</h3><p>In addition to creating Color instance objects through the colorsea function, you can also create Color instances through other color space methods</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> rgb<span class="token punctuation">,</span> hsl<span class="token punctuation">,</span> hsv<span class="token punctuation">,</span> hsi<span class="token punctuation">,</span> hwb<span class="token punctuation">,</span> xyz<span class="token punctuation">,</span> lab<span class="token punctuation">,</span> lch <span class="token punctuation">}</span> <span class="token operator">=</span> colorsea
<span class="token doc-comment comment">/**
* All of the above color space methods accept four parameters,
* The first three parameters are mandatory and are the color setting values of the color space.
* The fourth parameter is the alpha channel, which is not required. The default value is 100, which is 100% opaque.
*/</span> 
<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> color2 <span class="token operator">=</span> <span class="token function">hsl</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="colorsea-rgb" tabindex="-1"><a class="header-anchor" href="#colorsea-rgb" aria-hidden="true">#</a> colorsea.rgb</h2><p><code>colorsea.rgb(r, g, b, alpha)</code> is equal to <code>colorsea(rgb, alpha)</code></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">r</span> number Red, Range [0, 255]
@param g number Green, Range [0, 255]
@param b number Blue, Range [0, 255]
@param alpha number alpha, range [0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span>r<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> g<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">92</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),F=e(`<hr><h2 id="colorsea-hsl" tabindex="-1"><a class="header-anchor" href="#colorsea-hsl" aria-hidden="true">#</a> colorsea.hsl</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">h</span> number hue    range[0, 360)
@param s number saturation  range[0, 100]
@param l number lightness    range[0, 100]
@param alpha number alpha  range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsl</span><span class="token punctuation">(</span>h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> s<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> l<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsl</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S=e(`<hr><h2 id="colorsea-hsv" tabindex="-1"><a class="header-anchor" href="#colorsea-hsv" aria-hidden="true">#</a> colorsea.hsv</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">h</span> number hue                 range[0, 360)
@param s number saturation          range[0, 100]
@param v number brightness value    range[0, 100]
@param alpha number alpha           range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsv</span><span class="token punctuation">(</span>h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> s<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> v<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsv</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),V=e(`<hr><h2 id="colorsea-hsi" tabindex="-1"><a class="header-anchor" href="#colorsea-hsi" aria-hidden="true">#</a> colorsea.hsi</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">h</span> number hue    range[0, 360)
@param s number 饱和度  range[0, 100]
@param i number 亮度Intensity    range[0, 100]
@param alpha number alpha  range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsi</span><span class="token punctuation">(</span>h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> s<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> i<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">hsi</span><span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),Y=e(`<hr><h2 id="colorsea-hwb" tabindex="-1"><a class="header-anchor" href="#colorsea-hwb" aria-hidden="true">#</a> colorsea.hwb</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">h</span> number hue    range[0, 360)
@param w number whiteness  range[0, 100]
@param b number blackness   range[0, 100]
@param alpha number alpha  range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">hwb</span><span class="token punctuation">(</span>h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> w<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">hwb</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),A=e(`<hr><h2 id="colorsea-cmyk" tabindex="-1"><a class="header-anchor" href="#colorsea-cmyk" aria-hidden="true">#</a> colorsea.cmyk</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">c</span> number Cyan    range[0, 100]
@param m number Magenta      range[0, 100]
@param y number Yellow      range[0, 100]
@param k number black     range[0, 100]
@param alpha number alpha  range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">cmyk</span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> m<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> k<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">cmyk</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">21.57</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),G=e(`<hr><h2 id="colorsea-xyz" tabindex="-1"><a class="header-anchor" href="#colorsea-xyz" aria-hidden="true">#</a> colorsea.xyz</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">x</span> number x   
@param y number y  
@param z number z  
@param alpha number alpha  range[0~100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">xyz</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> z<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">xyz</span><span class="token punctuation">(</span><span class="token number">36.44</span><span class="token punctuation">,</span> <span class="token number">21.54</span><span class="token punctuation">,</span> <span class="token number">20.98</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),L=e(`<h2 id="colorsea-lab" tabindex="-1"><a class="header-anchor" href="#colorsea-lab" aria-hidden="true">#</a> colorsea.lab</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">l</span> number L* [0,100]
@param a number a* Red to green [127,-128]
@param b number b* Yellow to blue [127,-128]
@param alpha number alpha  range[0, 100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">lab</span><span class="token punctuation">(</span>l<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">lab</span><span class="token punctuation">(</span><span class="token number">50.57</span><span class="token punctuation">,</span> <span class="token number">8.77</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">46.64</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),O=e(`<hr><h2 id="colorsea-lch" tabindex="-1"><a class="header-anchor" href="#colorsea-lch" aria-hidden="true">#</a> colorsea.lch</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
<span class="token keyword">@param</span> <span class="token parameter">l</span> number lightness
@param c number chroma
@param h number hue [0, 360)
@param alpha number alpha  range[0~100]
*/</span>
colorsea<span class="token punctuation">.</span><span class="token function">lch</span><span class="token punctuation">(</span>l<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> c<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> h<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> alpha<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>

<span class="token comment">// Example</span>
colorsea<span class="token punctuation">.</span><span class="token function">lch</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),P=e(`<h2 id="colorsea-random" tabindex="-1"><a class="header-anchor" href="#colorsea-random" aria-hidden="true">#</a> colorsea.random</h2><p>Generate random color</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>colorsea<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function M(X,H){const l=p("Badge"),c=p("RouterLink"),o=p("ColorBox");return r(),u("div",null,[m,s("ul",null,[s("li",null,[b,s("ul",null,[k,s("li",null,[n("When the type is string, a string can be passed in several forms "),s("ul",null,[h,s("li",null,[n("2 Color space function string"),a(l,{text:"v1.2.0+",type:"tip"}),n("：For example"),v,n("、 "),g,n(" etc.，This mode is supported only in "),f,n(" and later versions. For details, see the following description"),y]),s("li",null,[n("3 Color name: After the color name is loaded, you can directly use the color name as a parameter. For details, see"),a(c,{to:"/pages/Names.html"},{default:t(()=>[n("【 Use color names】")]),_:1})])])]),_])]),x,s("li",null,[s("p",null,[w,a(l,{text:"v1.2.0+",type:"tip"}),n(": Config")]),C])]),E,a(o,{"box-color":"rgba(204, 0, 32, 90%)"},{default:t(()=>[n("colorsea('#cc0020', 90)")]),_:1}),T,a(o,{"box-color":"hsl(150, 80%, 60%)"},{default:t(()=>[n("colorsea('hsl(150, 80%, 60%)')")]),_:1}),z,a(o,{"box-color":"hsla(150, 80%, 60%, 20%)"},{default:t(()=>[n("colorsea('hsla(150, 80%, 60%, 20%)')")]),_:1}),n(" - "),a(o,{"box-color":"hsla(150, 80%, 60%, 20%)",alpha:40},{default:t(()=>[n("colorsea('hsla(150, 80%, 60%, 20%)', 40)")]),_:1}),I,a(o,{"box-color":"cmyk(40, 80, 60, 20)"},{default:t(()=>[n("colorsea('cmyk(40, 80, 60, 20)')")]),_:1}),B,a(o,{"box-color":"hwb(180, 50%, 10%)"},{default:t(()=>[n("colorsea('hwb(180, 50%, 10%)')")]),_:1}),q,s("p",null,[n("The first parameter of "),N,n(" also supports passing in color names. When using these color names, you need to load the name mapping relationship table separately. The currently supported color names are "),R,n(", "),U,n(", "),W,n(". You can also customize the color name. For specific usage, please refer to the document "),a(c,{to:"/colorsea/pages/Names.html"},{default:t(()=>[n("Using Color Names")]),_:1})]),j,a(o,{"box-color":"rgb(100, 20, 92)"},{default:t(()=>[n("colorsea.rgb(100, 20, 92)")]),_:1}),F,a(o,{"box-color":"hsl(180, 90%, 32%)"},{default:t(()=>[n("colorsea.hsl(180, 90, 32)")]),_:1}),S,a(o,{"box-color":"hsv(100, 100, 50)"},{default:t(()=>[n("colorsea.hsv(100, 100, 50)")]),_:1}),V,a(o,{"box-color":"hsi(55, 9, 31)"},{default:t(()=>[n("colorsea.hsi(55, 9, 31)")]),_:1}),Y,a(o,{"box-color":"hwb(200, 30, 47)"},{default:t(()=>[n("colorsea.hwb(200, 30, 47)")]),_:1}),A,a(o,{"box-color":"cmyk(65, 40, 0, 21.57)"},{default:t(()=>[n("colorsea.cmyk(65, 40, 0, 21.57)")]),_:1}),G,a(o,{"box-color":"xyz(36.44, 21.54, 20.98)"},{default:t(()=>[n("colorsea.xyz(36.44, 21.54, 20.98)")]),_:1}),L,a(o,{"box-color":"lab(50.57, 8.77, -46.64)"},{default:t(()=>[n("colorsea.lab(50.57, 8.77, -46.64)")]),_:1}),O,a(o,{"box-color":"lch(50, 120, 20)"},{default:t(()=>[n("colorsea.lch(50, 120, 20)")]),_:1}),P])}const Q=i(d,[["render",M],["__file","CreateInstance.html.vue"]]);export{Q as default};
