import{_ as l,M as p,p as i,q as u,N as s,U as e,t as n,Q as o,a1 as t}from"./framework-cbc93935.js";const r={},d=t(`<h1 id="颜色取值和改值" tabindex="-1"><a class="header-anchor" href="#颜色取值和改值" aria-hidden="true">#</a> 颜色取值和改值</h1><h2 id="color-red" tabindex="-1"><a class="header-anchor" href="#color-red" aria-hidden="true">#</a> color.red()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得rgb的红色通道的值，范围为[0, 255]</li><li>当传入amount时，为修改红色通度的值，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得红色通道值</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 255</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置红色通道为200</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// Color #c8cc22</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),k=t(`<h2 id="color-green" tabindex="-1"><a class="header-anchor" href="#color-green" aria-hidden="true">#</a> color.green()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得rgb的绿色通道的值，范围为[0, 255]</li><li>当传入amount时，为修改绿色通度的值，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得绿色通道值</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 204</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置绿色通道为100</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment">// Color #ff6422</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),m=t(`<h2 id="color-blue" tabindex="-1"><a class="header-anchor" href="#color-blue" aria-hidden="true">#</a> color.blue()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得rgb的蓝色通道的，值范围为[0, 255]</li><li>当传入amount时，为修改蓝色通度的值，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得蓝色通道值</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 34</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置蓝色通道为255</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token comment">// Color #ffccff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),b=t(`<h2 id="color-hue" tabindex="-1"><a class="header-anchor" href="#color-hue" aria-hidden="true">#</a> color.hue()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">hue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">hue</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得色相值，范围为[0, 360)</li><li>当传入amount时，为修改色相值，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得色相</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 46</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置色相为120°</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hue</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span> <span class="token comment">// Color #24ff24</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),v=t(`<h2 id="color-saturation" tabindex="-1"><a class="header-anchor" href="#color-saturation" aria-hidden="true">#</a> color.saturation()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得饱和度值，范围为[0, 100]</li><li>当传入amount时，为修改饱和度，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得饱和度</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置饱和度为20%</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">// Color #a79d7b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),f=t(`<h2 id="color-lightness" tabindex="-1"><a class="header-anchor" href="#color-lightness" aria-hidden="true">#</a> color.lightness()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">lightness</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">lightness</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得光亮度，范围为[0, 100]</li><li>当传入amount时，为修改光亮度，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得光亮度</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lightness</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 57</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置光亮度为30%</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffcc22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lightness</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">// Color #664e00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),g=t(`<h2 id="color-alpha" tabindex="-1"><a class="header-anchor" href="#color-alpha" aria-hidden="true">#</a> color.alpha()</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
color<span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span>amount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Color
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数 amount?: number <ul><li>当不传入amount时，取得alpha通道的值，范围为[0, 100]</li><li>当传入amount时，为修改alpha通道的值，并返回一个新的Color实例</li></ul></li></ul><p>例1：取得不透明度</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#22994a&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 90</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例2：设置不透明度为30%</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#22994a&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token comment">// Color #22994a33</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),h=t(`<h2 id="color-luma" tabindex="-1"><a class="header-anchor" href="#color-luma" aria-hidden="true">#</a> color.luma()</h2><p>取得感知亮度</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">luma</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#22994a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">luma</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 0.23616959154733871</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="color-brightness" tabindex="-1"><a class="header-anchor" href="#color-brightness" aria-hidden="true">#</a> color.brightness()</h2><p>取得明度Brightness</p><p>range: [0, 100]</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>color<span class="token punctuation">.</span><span class="token function">brightness</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#FFFFFF&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">brightness</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="color-visibility" tabindex="-1"><a class="header-anchor" href="#color-visibility" aria-hidden="true">#</a> color.visibility()</h2><p>检查一个颜色在另一个颜色上是否易于可见, 如果返回false, 则为可见性比较差。</p>`,13),x={href:"https://www.w3.org/TR/AERT/#color-contrast",target:"_blank",rel:"noopener noreferrer"},y=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
   * <span class="token keyword">@param</span> <span class="token parameter">anotherColor</span> 另一个用于对比的颜色
   * <span class="token keyword">@param</span> <span class="token parameter">setting</span> 用于判定可见性好坏的阈值设置,<span class="token punctuation">{</span>b, c<span class="token punctuation">}</span>. 
   * * b: brightness差值, 默认值为125, 小于或等于此值说明可见性差。颜色brightness值的范围取[0,255]
   * * c: rgb差值, 默认值为500，小于或等于此值说明可见性差
   */</span>
  color<span class="token punctuation">.</span><span class="token function">visibility</span><span class="token punctuation">(</span>
    anotherColor<span class="token operator">:</span> Color <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> CommonColoraTuple <span class="token operator">|</span> CommonColorTuple<span class="token punctuation">,</span>
    setting<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> c<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span>
  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例:</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">visibility</span><span class="token punctuation">(</span><span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ee6666&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
<span class="token function">colorsea</span><span class="token punctuation">(</span><span class="token string">&#39;#ffff00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">visibility</span><span class="token punctuation">(</span><span class="token string">&#39;#000000&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),_=t('<hr><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>color.red()</code>,<code>color.green()</code>,<code>color.blue()</code>,<code>color.hue()</code>,<code>color.saturation()</code>,<code>color.lightness()</code>, <code>color.alpha()</code>,<code>color.luma()</code>等方法的取值，如果其计算结果为小数，将会返会所有小数位数，并不会将结果进行取整或截取多少位小数。</p></div>',2);function C(w,T){const a=p("ColorBox"),c=p("ExternalLinkIcon");return i(),u("div",null,[d,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#c8cc22"},{default:e(()=>[n("#c8cc22")]),_:1}),k,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#ff6422"},{default:e(()=>[n("#ff6422")]),_:1}),m,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#ffccff"},{default:e(()=>[n("#ffccff")]),_:1}),b,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#24ff24"},{default:e(()=>[n("#24ff24")]),_:1}),v,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#a79d7b"},{default:e(()=>[n("#a79d7b")]),_:1}),f,s(a,{"box-color":"#ffcc22"},{default:e(()=>[n("#ffcc22")]),_:1}),n(" -> "),s(a,{"box-color":"#664e00"},{default:e(()=>[n("#664e00")]),_:1}),g,s(a,{"box-color":"#22994a"},{default:e(()=>[n("#22994a")]),_:1}),n(" -> "),s(a,{"box-color":"#22994a33"},{default:e(()=>[n("#22994a33")]),_:1}),h,o("blockquote",null,[o("p",null,[n("refer to: "),o("a",x,[n("https://www.w3.org/TR/AERT/#color-contrast"),s(c)])])]),y,s(a,{"box-color":"red","text-color":"#ee6666"},{default:e(()=>[n("#ff0000, #ee6666, return false")]),_:1}),n(", "),s(a,{"box-color":"#ffff00","text-color":"#000000"},{default:e(()=>[n("#ffff00, #000000, return true")]),_:1}),_])}const F=l(r,[["render",C],["__file","Value.html.vue"]]);export{F as default};
